<?xml version="1.0"?>

<launch>

 	<arg name="model" default="Igor_armed.urdf.xacro"/>
  	<arg name="paused" default="true"/>
  	<arg name="use_sim_time" default="true"/>
	<arg name="gui" default="true"/>
	<arg name="recording" default="false"/>
	<arg name="debug" default="false"/>
        <arg name="statistics" default="true" />

  	<!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		<!--arg name="world_name" value="$(find igor)/worlds/mud_world.world"/-->
		<!--arg name="world_name" value="worlds/robocup14_spl_field.world"/-->
    		<arg name="debug" value="$(arg debug)" />
    		<arg name="gui" value="$(arg gui)" />
    		<arg name="paused" value="$(arg paused)"/>
    		<arg name="use_sim_time" value="$(arg use_sim_time)"/>
    		<arg name="recording" value="$(arg recording)"/>
  	</include>

	<!-- Load joint controller configurations from YAML file to parameter server -->
	<rosparam command="load"
		    file="$(find igor)/config/joints.yaml"/>
	
	<!--param name="use_gui" value="$(arg gui)" />
  	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" /-->
	

	<!-- convert joint states to TF transforms for rviz, etc -->
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
		<param name="publish_frequency" type="double" value="1000.0" />
                <!--param name="tf_prefix" type="string" value="igor" /-->
		<remap from="/joint_states" to="/igor/joint_states" />
	</node>


  			<!-- Load URDF Model-->
	<!--param name="robot_description" textfile="$(find igor)/urdf/$(arg model)" /-->
	
	<!-- Convert xacro and put on parameter server -->
	<param name="robot_description" command="$(find xacro)/xacro $(find igor)/urdf/$(arg model)" />

        <param name="enable_statistics" value="$(arg statistics)" />
	
	<node name="cog_publisher_node" pkg="robot_kinetics" type="cog_publisher_node" args="" output="screen" respawn="true">
  	</node>


  	<!-- push robot_description to factory and spawn robot in gazebo -->
  	<node name="igor_spawner" pkg="gazebo_ros" type="spawn_model"
        	args="-x 0.0 -y 0.0 -z 0.861 -R 0.0 -P 0.0 -Y 0.0 -J L_kfe_joint 0.0 -J R_kfe_joint 0.0 -J R_hfe_joint -0.0 -J L_hfe_joint -0.0 -urdf -model igor -param robot_description" 			respawn="false" output="screen" />

        <!--Launching tf_reader node to read the frame transformation of two node -->
  	<!--node name="myIgor_tf_reader" pkg="igor" type="igor_tf_reader_node" args="base_link R_wheel"  output="screen" launch-prefix= "xterm -e" /-->
	
	<!--node pkg="tf" type="static_transform_publisher" name="static_broadcaster" args="-0.02 0 0.7 0 0 0 1 robot_center_link base_link 50" /-->
	<!--node name="igor_controller" pkg="igor" type="igor_2d_controller_node" output="screen" /-->
	<!--node name="igor_3d_controller" pkg="igor" type="igor_3d_controller_node" output="screen" /-->
	<node name="igor_knee_controller" pkg="igor" type="igor_knee_controller_node" output="screen"/>
	<node name="igor_disturber" pkg="igor" type="igor_disturber_node" output="screen" />
	<node name="igor_odom_broadcaster" pkg="igor" type="igor_odom_broadcaster_node" /> <!-- For Igor_knee_controller only-->
	<!--node name="igor_test_main" pkg="igor" type="igor_test_main_node" output="screen" /-->
	<node name="igor_markers_node" pkg="igor" type="igor_markers_node" /> <!-- For Igor_knee_controller only-->

  	<node name="rviz" pkg="rviz" type="rviz"/>
	

		<!-- load the controllers -->

	<node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" ns="/igor"
			args= "joint_state_controller
				L_hfe_joint_position_controller
				L_kfe_joint_position_controller
				R_kfe_joint_position_controller
				R_hfe_joint_position_controller
				R_wheel_joint_effort_controller
				L_wheel_joint_effort_controller
				Upper_arm_joint_effort_controller
				Fore_arm_joint_effort_controller">
	</node>

  	<!--node name="rqt_robot_steering" pkg="rqt_robot_steering" type="rqt_robot_steering">
    		<param name="default_topic" value="/igor/diff_drive_controller/cmd_vel"/>
  	</node-->



</launch>
